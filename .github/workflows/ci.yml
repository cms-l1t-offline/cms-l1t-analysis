name: CI

on: [push, pull_request]
  workflow_dispatch:
  # pull_request:
  # push:
  #   branches:
  #   - master
  #   - main
  #   - develop
  # release:
  #   types:
  #     - published

jobs:
  # pre-commit:
  #   name: Format
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - uses: actions/setup-python@v2
  #     with:
  #       python-version: "3.9" # some pre-commit hooks require Python <3.10
  #   - uses: pre-commit/action@v3.0.0
  #     with:
  #       extra_args: --hook-stage manual --all-files

  # checks:
  #   name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
  #   runs-on: ${{ matrix.runs-on }}
  #   needs: [pre-commit]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.8", "3.10"]
  #       runs-on: [ubuntu-latest]

  #   steps:
  #   - uses: actions/checkout@v2

  #   - uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}

  #   - name: Install package
  #     run: python -m pip install .[test]

  #   - name: Test package
  #     run: python -m pytest -ra
    
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
        python -m pip install .[test]
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda install pytest
        python -m pytest -ra

# need to restructure package before this can be used
  # dist:
  #   name: Distribution build
  #   runs-on: ubuntu-latest
  #   needs: [pre-commit]

  #   steps:
  #   - uses: actions/checkout@v1

  #   - name: Build sdist and wheel
  #     run: pipx run build

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       path: dist

  #   - name: Check products
  #     run: pipx run twine check dist/*

  #   - uses: pypa/gh-action-pypi-publish@v1.5.0
  #     if: github.event_name == 'release' && github.event.action == 'published'
  #     with:
  #       user: __token__
  #       # Remember to generate this and set it in "GitHub Secrets"
  #       password: ${{ secrets.pypi_password }}
