# replicating
# ntuple_cfg benchmark_cfg()
# {
#   ntuple_cfg config;
#   config.sampleName   = "Data";
#   config.sampleTitle  = "2016 Data";
#   config.triggerName  = "SingleMu";
#   config.triggerTitle = "Single Muon";
#   config.puFilename   = "";
#   config.run          = "276243";
#   config.outDirBase   = "{{BENCHMARK_OUTPUT_FOLDER}}";
#   config.doFit        = false;
#   config.puType       = {"0PU12","13PU19","20PU"};
#   config.puBins       = {0,13,20,999};
#   config.inFiles      = {"{{BENCHMARK_DATA}}}/*.root"};
#   config.baseOWdir    = config.outDirBase +
#       "/20161101_"+config.sampleName+"_run-"+config.run+"_"+\
#       config.triggerName+"_hadd/";
#   config.outDir       = config.outDirBase+"/"+TL1DateTime::GetDate()+"_"+\
#   config.sampleName+"_run-"+config.run+"_"+config.triggerName;
#   return config;
# }


version: 0.0.1
name: Benchmark

input:
  files:
    - data/L1Ntuple_*.root
  sample:
    name: Data
    title: 2016 Data
  trigger:
    name: SingleMu
    title: Single Muon
  pileup_file: ""
  run_number: 276243

analysis:
  do_fit: False
  pu_type: 0PU12,13PU19,20PU
  pu_bins: 0,13,20,999
  analyzers:
    - cmsl1t.analyzers.demo_analyzer
  producers:
    - cmsl1t.recalc.met.l1MetNot28:
        in: event.caloTowers
        out: event.l1MetNot28
    - cmsl1t.recalc.met.l1MetNot28HF:
        in: event.caloTowers
        out: event.l1MetNot28HF
  progress_bar:
    report_every: 1000
  # or to switch it off
  # progress_bar:
  #   enable: False

output:
  # template is a list here that is joined (os.path.join) in the config parser
  template:
     - benchmark/new
     - "{date}_{sample_name}_run-{run_number}_{trigger_name}"
